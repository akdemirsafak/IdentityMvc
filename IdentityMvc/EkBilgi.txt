HttpContext Controller sınıfından geliyor. HttpContext'i başka bir alanda kullanmak istersek IHttpContext
Accessor u property olarak ekleyip constructor'da geçtikten sonra kullanabiliriz.
Ayrıca Program.cs'de servis'e eklememiz lazım.
	builder.Services.AddHttpContextAccessor(); 
	Role based auth. Static, claim based auth. ise dynamic'tir.
	Claim + Role based yetkilendirme (RoleClaim tablosu) Permisson bazlı yetkilendirme yapabilmemizi sağlayacak.
	
	
Permission Yapısı
	
	## kullanıcıya özel yetki tanımlamak istersek userclaim tablosunda tanımlarız.
** Büyük çaplı permission yapısında roleclaim tablosu kullanılması best practice değildir.Çünkü direkt cookie'ye eklenir.
Burada birinci yaklaşım kullanıcı login olurken claimler'in eklenmesini yapmayız(çok fazla claim var) bunu dynamic olarak yaparız.
Burada signInManager kullanmak zorunda değiliz.HttpContext üzerinden gelen SignInAsync methodunu kullanabiliriz.Burada custom claims oluşturabiliriz.

3th authentication için Proje->Manage User Secrets'e(secrets.json) girip api ile ilgili Id şifre gibi bilgileri yazıyoruz.


Microsoft Hesabı ile kimlik doğrulama Azure a taşındı.
azure.com => app registrations => new app=> 
Settings :
Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)

Redirect Uri : Web => https://localhost:7030/signin-microsoft
App oluşturulduktan sonra => Certificates & Secrets 'a new Client Secret oluşturarak ad ve ömür belirleyelim. (12 ay belirledim.)

Install-Package Microsoft.AspNetCore.Authentication.MicrosoftAccount